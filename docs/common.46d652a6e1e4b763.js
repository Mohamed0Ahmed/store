"use strict";(self.webpackChunkDashBoard=self.webpackChunkDashBoard||[]).push([[592],{7913:(u,l,o)=>{o.d(l,{c:()=>_});var n=o(6814),r=o(4769);let _=(()=>{class c{static#e=this.\u0275fac=function(a){return new(a||c)};static#t=this.\u0275cmp=r.Xpm({type:c,selectors:[["app-footer"]],standalone:!0,features:[r.jDz],decls:2,vars:0,template:function(a,t){1&a&&(r.TgZ(0,"p"),r._uU(1,"footer works!"),r.qZA())},dependencies:[n.ez]})}return c})()},9483:(u,l,o)=>{o.d(l,{e:()=>s});var n=o(8784),r=o(4769),_=o(9862),c=o(1120);let s=(()=>{class e{constructor(t,i){this._HttpClient=t,this._Router=i}saveUserData(){if(localStorage.getItem("eToken")){let t=localStorage.getItem("eToken"),i=(0,n.o)(t);this.Dataaa=i,console.log(this.Dataaa)}}register(t){return this._HttpClient.post("https://ecommerce.routemisr.com/api/v1/auth/signup",t)}login(t){return this._HttpClient.post("https://ecommerce.routemisr.com/api/v1/auth/signin",t)}logout(){localStorage.removeItem("eToken"),this._Router.navigate(["/guest/login"])}static#e=this.\u0275fac=function(i){return new(i||e)(r.LFG(_.eN),r.LFG(c.F0))};static#t=this.\u0275prov=r.Yz7({token:e,factory:e.\u0275fac,providedIn:"root"})}return e})()},8784:(u,l,o)=>{o.d(l,{o:()=>c});class n extends Error{}function c(s,e){if("string"!=typeof s)throw new n("Invalid token specified: must be a string");e||(e={});const a=!0===e.header?0:1,t=s.split(".")[a];if("string"!=typeof t)throw new n(`Invalid token specified: missing part #${a+1}`);let i;try{i=function _(s){let e=s.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return function r(s){return decodeURIComponent(atob(s).replace(/(.)/g,(e,a)=>{let t=a.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t="0"+t),"%"+t}))}(e)}catch{return atob(e)}}(t)}catch(d){throw new n(`Invalid token specified: invalid base64 for part #${a+1} (${d.message})`)}try{return JSON.parse(i)}catch(d){throw new n(`Invalid token specified: invalid json for part #${a+1} (${d.message})`)}}n.prototype.name="InvalidTokenError"}}]);